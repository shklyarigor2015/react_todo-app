{"version":3,"sources":["components/TodoItem/TodoItem.js","components/TodoList/TodoList.js","components/NewTodo/NewTodo.js","components/Footer/Footer.js","App.js","index.js"],"names":["TodoItem","_ref","todo","toggleComplete","deleteTodo","react_default","a","createElement","className","type","onChange","id","checked","completed","title","onClick","TodoList","todos","map","components_TodoItem_TodoItem","key","NewTodo","state","countNewTodo","handleClick","event","preventDefault","addTodo","_this","props","target","value","length","newTodo","setState","prevState","Object","objectSpread","onSubmit","this","placeholder","name","Component","Footer","removeAllCompleteTodos","updateActiveTab","activeTab","style","display","filter","href","some","App","checkAll","concat","toConsumableArray","removeAllCompleted","item","_this$state","todosShow","components_NewTodo_NewTodo","htmlFor","components_TodoList_TodoList","components_Footer_Footer","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.6d52aa1d.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TodoItem = ({ todo, toggleComplete , deleteTodo }) => {\n  return (\n    <li>\n      <div className=\"view\">\n        <input\n          type=\"checkbox\"\n          className=\"toggle\"\n          onChange={() => toggleComplete (todo.id)}\n          checked={todo.completed}\n        />\n        <label>{todo.title}</label>\n        <button\n          type=\"button\"\n          className=\"destroy\"\n          onClick={() => deleteTodo(todo.id)}\n        />\n      </div>\n    </li>\n  );\n};\n\nTodoItem.propTypes = {\n  deleteTodo: PropTypes.func.isRequired,\n  toggleComplete : PropTypes.func.isRequired,\n  todo: PropTypes.shape({\n    text: PropTypes.string.isRequired,\n    toggleComplete : PropTypes.bool.isRequired,\n  }).isRequired,\n};\n\nexport default TodoItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport TodoItem from '../TodoItem/TodoItem';\n\nconst TodoList = ({ todos, toggleComplete , deleteTodo }) => (\n  <ul className=\"todo-list\">\n    {todos.map(todo => (\n      <TodoItem\n        todo={todo}\n        key={todo.id}\n        toggleComplete={toggleComplete }\n        deleteTodo={deleteTodo}\n      />\n    ))}\n  </ul>\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    text: PropTypes.string.isRequired,\n    toggleComplete : PropTypes.bool.isRequired,\n  })).isRequired,\n  toggleComplete : PropTypes.func.isRequired,\n  deleteTodo: PropTypes.func.isRequired,\n};\n\nexport default TodoList;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass NewTodo extends Component {\n  state = {\n    countNewTodo: 0,\n    title: '',\n  };\n\n  handleClick = (event) => {\n    event.preventDefault();\n\n    const { addTodo } = this.props;\n    const { title } = event.target;\n\n    if (title.value.length < 1) {\n      return false;\n    }\n\n    const newTodo = {\n      title: title.value,\n      completed: false,\n      id: this.state.countNewTodo,\n    };\n\n    this.setState(prevState => ({\n      ...prevState,\n      countNewTodo: prevState.countNewTodo + 1,\n      title: '',\n    }));\n\n    addTodo(newTodo);\n  };\n\n  onChange = (event) => {\n    this.setState({\n      title: event.target.value,\n    });\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handleClick}>\n        <input\n          className=\"new-todo\"\n          placeholder=\"What needs to be done?\"\n          onChange={this.onChange}\n          value={this.state.title}\n          name=\"title\"\n        />\n      </form>\n    );\n  }\n}\n\nNewTodo.propTypes = {\n  addTodo: PropTypes.func.isRequired,\n};\n\nexport default NewTodo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Footer = ({\n  todos,\n  removeAllCompleteTodos,\n  updateActiveTab,\n  activeTab,\n}) => (\n  <footer className=\"footer\" style={{ display: 'block' }}>\n    <span className=\"todo-count\">\n      {todos.filter(todo => !todo.completed).length}\n      {' '}\n      item left\n    </span>\n\n    <ul className=\"filters\">\n      <li>\n        <a\n          href=\"#/\"\n          onClick={() => updateActiveTab('all')}\n          className={activeTab === 'all' ? 'selected' : ''}\n        >\n          All\n        </a>\n      </li>\n\n      <li>\n        <a\n          onClick={() => updateActiveTab('active')}\n          href=\"#/active\"\n          className={activeTab === 'active' ? 'selected' : ''}\n        >\n          Active\n        </a>\n      </li>\n\n      <li>\n        <a\n          href=\"#/completed\"\n          onClick={() => updateActiveTab('completed')}\n          className={activeTab === 'completed' ? 'selected' : ''}\n        >\n          Completed\n        </a>\n      </li>\n    </ul>\n\n    {todos.some(todo => todo.completed) && (\n      <button\n        type=\"button\"\n        className=\"clear-completed\"\n        onClick={removeAllCompleteTodos}\n      >\n        Clear completed\n      </button>\n    )}\n  </footer>\n);\n\nFooter.propTypes = {\n  removeAllCompleteTodos: PropTypes.func.isRequired,\n  updateActiveTab: PropTypes.func.isRequired,\n  activeTab: PropTypes.string.isRequired,\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport TodoList from './components/TodoList/TodoList';\nimport NewTodo from './components/NewTodo/NewTodo';\nimport Footer from './components/Footer/Footer';\n\nclass App extends Component {\n  state = {\n    todos: [],\n    activeTab: 'all',\n    checkAll: true,\n  };\n\n  addTodo = (todo) => {\n    this.setState(prevState => ({\n      todos: [...prevState.todos, todo],\n    }));\n  };\n\n  toggleComplete  = id => {\n    this.setState(({ todos }) => ({\n      todos: todos.map((todo) => {\n        if (todo.id === id) {\n          return { ...todo, completed: !todo.completed };\n        }\n\n        return todo;\n      }),\n    }));\n  };\n\n  checkAll = () => {\n    this.setState(prevState => ({\n      todos: prevState.todos.map(todo => ({\n        ...todo,\n        completed: prevState.checkAll,\n      })),\n\n      checkAll: !prevState.checkAll,\n    }));\n  };\n\n  deleteTodo = (id) => {\n    this.setState(prevState => ({\n      todos: prevState.todos.filter(todo => todo.id !== id),\n    }));\n  };\n\n  removeAllCompleted = () => {\n    this.setState(prevState => ({\n      todos: prevState.todos.filter(todo => !todo.completed),\n    }));\n  };\n\n  updateActiveTab = (item) => {\n    this.setState({\n      activeTab: item,\n    });\n  };\n\n  render() {\n    const { todos, activeTab } = this.state;\n\n    let todosShow = [];\n\n    switch (activeTab) {\n      case 'all':\n        todosShow = todos;\n        break;\n      case 'active':\n        todosShow = todos.filter(todo => !todo.completed);\n        break;\n      case 'completed':\n        todosShow = todos.filter(todo => todo.completed);\n        break;\n    }\n\n    return (\n      <section className=\"todoapp\">\n        <header className=\"header\">\n          <h1>todos</h1>\n          <NewTodo addTodo={this.addTodo} />\n        </header>\n\n        <section className=\"main\" style={{ display: 'block' }}>\n          <input\n            type=\"checkbox\"\n            id=\"toggle-all\"\n            className=\"toggle-all\"\n            onClick={this.checkAll}\n          />\n          <label htmlFor=\"toggle-all\">Mark all as complete</label>\n\n          <TodoList\n            todos={todosShow}\n            toggleComplete ={this.toggleComplete}\n            deleteTodo={this.deleteTodo}\n          />\n        </section>\n\n        <Footer\n          todos={todos}\n          removeAllCompleteTodos={this.removeAllCompleted}\n          activeTab={activeTab}\n          updateActiveTab={this.updateActiveTab}\n        />\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './base.css';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}