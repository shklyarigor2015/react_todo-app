{"version":3,"sources":["components/TodoItem/TodoItem.js","components/TodoList/TodoList.js","components/NewTodo/NewTodo.js","components/Footer/Footer.js","App.js","index.js"],"names":["TodoItem","_ref","todo","complete","deleteTodo","react_default","a","createElement","className","type","onChange","id","checked","completed","title","onClick","TodoList","todos","map","components_TodoItem_TodoItem","key","NewTodo","state","countNewTodo","event","preventDefault","addTodo","_this","props","target","value","length","newTodo","setState","prevState","Object","objectSpread","onSubmit","this","placeholder","name","Component","Footer","removeAllCompleteTodos","updateActiveTab","activeTab","style","display","filter","href","some","App","allComplete","concat","toConsumableArray","removeAllComplete","string","_this$state","todosShow","components_NewTodo_NewTodo","htmlFor","components_TodoList_TodoList","components_Footer_Footer","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.ee7cc461.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst TodoItem = ({ todo, complete, deleteTodo }) => {\r\n  return (\r\n    <li>\r\n      <div className=\"view\">\r\n        <input\r\n          type=\"checkbox\"\r\n          className=\"toggle\"\r\n          onChange={() => complete(todo.id)}\r\n          checked={todo.completed}\r\n        />\r\n        <label>{todo.title}</label>\r\n        <button\r\n          type=\"button\"\r\n          className=\"destroy\"\r\n          onClick={() => deleteTodo(todo.id)}\r\n        />\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nTodoItem.propTypes = {\r\n  deleteTodo: PropTypes.func.isRequired,\r\n  complete: PropTypes.func.isRequired,\r\n  todo: PropTypes.shape({\r\n    text: PropTypes.string.isRequired,\r\n    complete: PropTypes.bool.isRequired,\r\n  }).isRequired,\r\n};\r\n\r\nexport default TodoItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport TodoItem from '../TodoItem/TodoItem';\r\n\r\nconst TodoList = ({ todos, complete, deleteTodo }) => (\r\n  <ul className=\"todo-list\">\r\n    {todos.map(todo => (\r\n      <TodoItem\r\n        todo={todo}\r\n        key={todo.id}\r\n        complete={complete}\r\n        deleteTodo={deleteTodo}\r\n      />\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nTodoList.propTypes = {\r\n  todos: PropTypes.arrayOf(PropTypes.shape({\r\n    text: PropTypes.string.isRequired,\r\n    complete: PropTypes.bool.isRequired,\r\n  })).isRequired,\r\n  complete: PropTypes.func.isRequired,\r\n  deleteTodo: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default TodoList;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass NewTodo extends Component {\r\n  state = {\r\n    countNewTodo: 0,\r\n    title: '',\r\n  };\r\n\r\n  onClick = (event) => {\r\n    event.preventDefault();\r\n\r\n    const { addTodo } = this.props;\r\n    const { title } = event.target;\r\n\r\n    if (title.value.length < 1) {\r\n      return false;\r\n    }\r\n\r\n    const newTodo = {\r\n      title: title.value,\r\n      completed: false,\r\n      id: this.state.countNewTodo,\r\n    };\r\n\r\n    this.setState(prevState => ({\r\n      ...prevState,\r\n      countNewTodo: prevState.countNewTodo + 1,\r\n      title: '',\r\n    }));\r\n\r\n    addTodo(newTodo);\r\n  };\r\n\r\n  onChange = (event) => {\r\n    this.setState({\r\n      title: event.target.value,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.onClick}>\r\n        <input\r\n          className=\"new-todo\"\r\n          placeholder=\"What needs to be done?\"\r\n          onChange={this.onChange}\r\n          value={this.state.title}\r\n          name=\"title\"\r\n        />\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nNewTodo.propTypes = {\r\n  addTodo: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default NewTodo;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Footer = ({\r\n  todos,\r\n  removeAllCompleteTodos,\r\n  updateActiveTab,\r\n  activeTab,\r\n}) => (\r\n  <footer className=\"footer\" style={{ display: 'block' }}>\r\n    <span className=\"todo-count\">\r\n      {todos.filter(todo => !todo.completed).length}\r\n      {' '}\r\n      item left\r\n    </span>\r\n\r\n    <ul className=\"filters\">\r\n      <li>\r\n        <a\r\n          href=\"#/\"\r\n          onClick={() => updateActiveTab('all')}\r\n          className={activeTab === 'all' ? 'selected' : ''}\r\n        >\r\n          All\r\n        </a>\r\n      </li>\r\n\r\n      <li>\r\n        <a\r\n          onClick={() => updateActiveTab('active')}\r\n          href=\"#/active\"\r\n          className={activeTab === 'active' ? 'selected' : ''}\r\n        >\r\n          Active\r\n        </a>\r\n      </li>\r\n\r\n      <li>\r\n        <a\r\n          href=\"#/completed\"\r\n          onClick={() => updateActiveTab('completed')}\r\n          className={activeTab === 'completed' ? 'selected' : ''}\r\n        >\r\n          Completed\r\n        </a>\r\n      </li>\r\n    </ul>\r\n\r\n    {todos.some(todo => todo.completed) && (\r\n      <button\r\n        type=\"button\"\r\n        className=\"clear-completed\"\r\n        onClick={removeAllCompleteTodos}\r\n      >\r\n        Clear completed\r\n      </button>\r\n    )}\r\n  </footer>\r\n);\r\n\r\nFooter.propTypes = {\r\n  removeAllCompleteTodos: PropTypes.func.isRequired,\r\n  updateActiveTab: PropTypes.func.isRequired,\r\n  activeTab: PropTypes.string.isRequired,\r\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n};\r\n\r\nexport default Footer;\r\n","import React, { Component } from 'react';\r\nimport TodoList from './components/TodoList/TodoList';\r\nimport NewTodo from './components/NewTodo/NewTodo';\r\nimport Footer from './components/Footer/Footer';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    todos: [],\r\n    activeTab: 'all',\r\n    allComplete: true,\r\n  };\r\n\r\n  addTodo = (todo) => {\r\n    this.setState(prevState => ({\r\n      todos: [...prevState.todos, todo],\r\n    }));\r\n  };\r\n\r\n  complete = id => {\r\n    this.setState(({ todos }) => ({\r\n      todos: todos.map((todo) => {\r\n        if (todo.id === id) {\r\n          return { ...todo, completed: !todo.completed };\r\n        }\r\n\r\n        return todo;\r\n      }),\r\n    }));\r\n  };\r\n\r\n  allComplete = () => {\r\n    this.setState(prevState => ({\r\n      todos: prevState.todos.map(todo => ({\r\n        ...todo,\r\n        completed: prevState.allComplete,\r\n      })),\r\n      allComplete: !prevState.allComplete,\r\n    }));\r\n  };\r\n\r\n  deleteTodo = (id) => {\r\n    this.setState(prevState => ({\r\n      todos: prevState.todos.filter(todo => todo.id !== id),\r\n    }));\r\n  };\r\n\r\n  removeAllComplete = () => {\r\n    this.setState(prevState => ({\r\n      todos: prevState.todos.filter(todo => !todo.completed),\r\n    }));\r\n  };\r\n\r\n  updateActiveTab = (string) => {\r\n    this.setState({\r\n      activeTab: string,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { todos, activeTab } = this.state;\r\n\r\n    let todosShow = [];\r\n\r\n    switch(activeTab) {\r\n      case 'all':\r\n        todosShow = todos;\r\n        break;\r\n      case 'active':\r\n        todosShow = todos.filter(todo => !todo.completed);\r\n        break;\r\n      case 'completed':\r\n        todosShow = todos.filter(todo => todo.completed);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    return (\r\n      <section className=\"todoapp\">\r\n        <header className=\"header\">\r\n          <h1>todos</h1>\r\n          <NewTodo addTodo={this.addTodo} />\r\n        </header>\r\n\r\n        <section className=\"main\" style={{ display: 'block' }}>\r\n          <input\r\n            type=\"checkbox\"\r\n            id=\"toggle-all\"\r\n            className=\"toggle-all\"\r\n            onClick={this.allComplete}\r\n          />\r\n          <label htmlFor=\"toggle-all\">Mark all as complete</label>\r\n\r\n          <TodoList\r\n            todos={todosShow}\r\n            complete={this.complete}\r\n            deleteTodo={this.deleteTodo}\r\n          />\r\n        </section>\r\n\r\n        <Footer\r\n          todos={todos}\r\n          removeAllCompleteTodos={this.removeAllComplete}\r\n          activeTab={activeTab}\r\n          updateActiveTab={this.updateActiveTab}\r\n        />\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './base.css';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}